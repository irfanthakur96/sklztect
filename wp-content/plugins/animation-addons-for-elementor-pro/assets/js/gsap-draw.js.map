{"version":3,"file":"gsap-draw.js","names":["WgsapDrawSvg","$scope","gsapElement","querySelector","scroll_trigger","Boolean","getAttribute","method","draw_percent","from","to","duration","parseFloat","delay","repeat","ease","timeline_yoyo","scrub","scrollTriggerStart","scrollTriggerEnd","cls","concat","paths","Array","document","querySelectorAll","length","console","log","tl","gsap","timeline","yoyo","forEach","path","i","fromTo","drawSVG","plugins","ScrollTrigger","registerPlugin","trigger","start","end","window","addEventListener","elementorFrontend","hooks","addAction"],"sources":["gsap-draw.js"],"sourcesContent":["(function () {\r\n\r\n    const WgsapDrawSvg = function ($scope) {\r\n       \r\n        // Get the data attributes for animation control using native JavaScript\r\n        const gsapElement = $scope[0].querySelector('.gsap-draw-svg');\r\n  \r\n        const scroll_trigger     = Boolean(gsapElement.getAttribute('data-scroll_trigger') || false);\r\n        const method             = gsapElement.getAttribute('data-method') || 'fromTo';\r\n        const draw_percent       = gsapElement.getAttribute('data-draw_percent') || '0%';\r\n        const from               = gsapElement.getAttribute('data-from') || '0%';\r\n        const to                 = gsapElement.getAttribute('data-to') || '100%';\r\n        const duration           = parseFloat(gsapElement.getAttribute('data-duration')) || 1;\r\n        const delay              = parseFloat(gsapElement.getAttribute('data-delay')) || 0;\r\n        const repeat             = parseFloat(gsapElement.getAttribute('data-repeat')) || 0;\r\n        const ease               = gsapElement.getAttribute('data-ease') || 'power2.inOut';\r\n        const timeline_yoyo      = Boolean( gsapElement.getAttribute('data-timeline_yoyo') || false );\r\n        const scrub              = Boolean( gsapElement.getAttribute('data-scrub') || false );\r\n        const scrollTriggerStart = gsapElement.getAttribute('data-scrolltrigger-start') || 'top bottom';\r\n        const scrollTriggerEnd   = gsapElement.getAttribute('data-scrolltrigger-end') || 'bottom top';\r\n  \r\n        const cls = `.elementor-element-${$scope[0].getAttribute('data-id')} svg path`;       \r\n        // Ensure paths are available and correctly selected\r\n        const paths = Array.from(document.querySelectorAll(cls));       \r\n        if (paths.length === 0) {\r\n            console.log(\"No paths found for animation!\");\r\n            return;\r\n        } \r\n        \r\n        if(!scroll_trigger){\r\n          \r\n            const tl = gsap.timeline({\r\n                duration: duration,\r\n                delay   : delay,\r\n                repeat  : repeat,\r\n                yoyo    : timeline_yoyo\r\n            });\r\n        \r\n            paths.forEach((path, i) => {\r\n            \r\n                if( method === 'fromTo' ){                      \r\n                    tl.fromTo(\r\n                        path,\r\n                        { drawSVG: from },   \r\n                        { \r\n                            drawSVG : to,\r\n                            duration: duration,\r\n                            delay   : i * delay,\r\n                            ease    : ease,                       \r\n                        }\r\n                    ); \r\n                    \r\n                }else{\r\n                   \r\n                    tl[method](\r\n                        path,               \r\n                        { \r\n                            drawSVG : draw_percent,\r\n                            duration: duration,\r\n                            delay   : i * delay,\r\n                            ease    : ease,\r\n                        }\r\n                    );\r\n                }    \r\n               \r\n            });     \r\n           \r\n        }else{\r\n            // Register GSAP plugin if not already registered\r\n            if (!gsap.plugins.ScrollTrigger && ScrollTrigger) {\r\n                gsap.registerPlugin(ScrollTrigger);\r\n            }\r\n            // Apply GSAP animation with ScrollTrigger\r\n            paths.forEach((path, i) => {\r\n                if (method === 'fromTo') {                    \r\n                    gsap.fromTo(\r\n                        path,\r\n                        { drawSVG: from },\r\n                        {\r\n                            drawSVG: draw_percent,\r\n                            duration: duration,\r\n                            delay: delay + (i * 0.5), // stagger delay\r\n                            ease: ease,\r\n                            ScrollTrigger: {\r\n                                trigger: $scope,\r\n                                start  : scrollTriggerStart,\r\n                                end    : scrollTriggerEnd,\r\n                                scrub  : scrub,\r\n                            },\r\n                            repeat: repeat, // Repeat the animation\r\n                            yoyo: timeline_yoyo // No yoyo effect (reverse)\r\n                        }\r\n                    );\r\n                } else if (method === 'from') {\r\n                    \r\n                    gsap.from(\r\n                        path,\r\n                        {\r\n                            drawSVG: draw_percent,\r\n                            duration: duration,\r\n                            delay: delay + (i * 0.5), // stagger delay\r\n                            ease: ease,\r\n                            ScrollTrigger: {\r\n                                trigger: $scope,\r\n                                start: scrollTriggerStart,\r\n                                end: scrollTriggerEnd,\r\n                                scrub: scrub,\r\n                            },\r\n                            repeat: repeat, // Repeat the animation\r\n                            yoyo: timeline_yoyo // No yoyo effect (reverse)\r\n                        }\r\n                    );\r\n                } \r\n            });\r\n        }\r\n     \r\n        \r\n    };\r\n\r\n    // Wait for Elementor frontend to initialize\r\n    window.addEventListener('elementor/frontend/init', function () {\r\n        // Register the action for element ready hook\r\n        elementorFrontend.hooks.addAction('frontend/element_ready/wcf-gsap-drawsvg.default', WgsapDrawSvg);\r\n    });\r\n})();\r\n"],"mappings":"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","ignoreList":[]}